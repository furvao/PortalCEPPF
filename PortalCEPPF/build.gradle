apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'

webAppDirName = 'web'

configurations{
       projectConfig
       all{
             resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
       }
}

war {   
    //rootSpec.exclude("jarname.jar")
}


repositories {
    mavenCentral()
}

dependencies {

	//MYSQL DRIVER
	compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'

	//HIBERNATE
	compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.9.Final'	

	 // JERSEY 
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.23'
	compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.23'     
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.23'

	// JACKSON
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.22.1'
	
	// SWAGGER
	compile group: 'io.swagger', name: 'swagger-jersey2-jaxrs', version: '1.5.10'
	
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1'
	compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.6.1'
	
	// PROVIDED DEPENDENCIES
    providedCompile ('javax.servlet:javax.servlet-api:3.1.0')
	
	// TEST
	testCompile group: 'org.glassfish.jersey.test-framework', name: 'jersey-test-framework-core', version: '2.23.1'
	testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-inmemory', version: '2.23.1'	
	 
	testCompile 'junit:junit:4.11'
    testCompile 'org.hamcrest:hamcrest-all:1.3'

}

task copyJars(type: Copy) {
    from ("build/libs/PortalCEPPF/WEB-INF/lib")
    into ("web/WEB-INF/lib")
    include('*.jar')
}

task deleteJars(type: Delete) {
    delete fileTree("/web/WEB-INF/lib") {
        include '*.jar'
    }
}

task unzip(type: Copy) {
    def zipFile = file('build/libs/PortalCEPPF.war')
    def outputDir = file("build/libs/PortalCEPPF")
 
    from zipTree(zipFile)
    into outputDir
}

copyJars.dependsOn unzip
compileJava.dependsOn clean
build.dependsOn deleteJars
build.finalizedBy copyJars

assemble.dependsOn deleteJars
assemble.finalizedBy copyJars

tasks.withType(JavaCompile) { 
 options.encoding = "UTF-8"
}

test {
  ignoreFailures = true
}